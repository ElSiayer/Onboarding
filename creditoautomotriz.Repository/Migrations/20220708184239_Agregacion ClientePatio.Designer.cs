// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using creditoautomotriz.Repository.Context;

namespace creditoautomotriz.Repository.Migrations
{
    [DbContext(typeof(AppDbContext))]
    [Migration("20220708184239_Agregacion ClientePatio")]
    partial class AgregacionClientePatio
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .UseIdentityColumns()
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("ProductVersion", "5.0.0");

            modelBuilder.Entity("creditoautomotriz.Entity.Models.Cliente", b =>
                {
                    b.Property<string>("Identificacion")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Apellidos")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Direccion")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Edad")
                        .HasColumnType("int");

                    b.Property<int>("EstadoCivilId")
                        .HasColumnType("int");

                    b.Property<DateTime>("FechaNacimiento")
                        .HasColumnType("datetime2");

                    b.Property<string>("IdentificacionConyugue")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("NombreConyugue")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Nombres")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("SujetoCredito")
                        .HasColumnType("bit");

                    b.Property<string>("Telefono")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Identificacion");

                    b.HasIndex("EstadoCivilId");

                    b.ToTable("Cliente");
                });

            modelBuilder.Entity("creditoautomotriz.Entity.Models.Credito", b =>
                {
                    b.Property<int>("CreditoId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<string>("ClienteId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<decimal>("Cuotas")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("EjecutivoId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<decimal>("Entrada")
                        .HasColumnType("decimal(18,2)");

                    b.Property<int>("EstadoCreditoId")
                        .HasColumnType("int");

                    b.Property<DateTime>("FechaElaboracion")
                        .HasColumnType("datetime2");

                    b.Property<int>("MesesPlazo")
                        .HasColumnType("int");

                    b.Property<string>("Observacion")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Placa")
                        .HasColumnType("nvarchar(450)");

                    b.Property<int>("PuntoVenta")
                        .HasColumnType("int");

                    b.HasKey("CreditoId");

                    b.HasIndex("ClienteId");

                    b.HasIndex("EjecutivoId");

                    b.HasIndex("EstadoCreditoId");

                    b.HasIndex("Placa");

                    b.HasIndex("PuntoVenta");

                    b.ToTable("Credito");
                });

            modelBuilder.Entity("creditoautomotriz.Entity.Models.Ejecutivo", b =>
                {
                    b.Property<string>("Identificacion")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Apellidos")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Celular")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Direccion")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Edad")
                        .HasColumnType("int");

                    b.Property<string>("Nombres")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("PatioId")
                        .HasColumnType("int");

                    b.Property<string>("TelefonoCon")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Identificacion");

                    b.HasIndex("PatioId");

                    b.ToTable("Ejecutivo");
                });

            modelBuilder.Entity("creditoautomotriz.Entity.Models.EstadoCivil", b =>
                {
                    b.Property<int>("EstadoCivilId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<string>("Estado")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("EstadoCivilId");

                    b.ToTable("EstadoCivil");
                });

            modelBuilder.Entity("creditoautomotriz.Entity.Models.EstadoCredito", b =>
                {
                    b.Property<int>("EstadoCreditoId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("EstadoCreditoId");

                    b.ToTable("EstadoCredito");
                });

            modelBuilder.Entity("creditoautomotriz.Entity.Models.Marca", b =>
                {
                    b.Property<int>("MarcaId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("MarcaId");

                    b.ToTable("Marca");
                });

            modelBuilder.Entity("creditoautomotriz.Entity.Models.Patio", b =>
                {
                    b.Property<int>("PuntoVenta")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<string>("Direccion")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Telefono")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("PuntoVenta");

                    b.ToTable("Patio");
                });

            modelBuilder.Entity("creditoautomotriz.Entity.Models.Vehiculo", b =>
                {
                    b.Property<string>("Placa")
                        .HasColumnType("nvarchar(450)");

                    b.Property<decimal>("Avaluo")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("Cilindraje")
                        .HasColumnType("decimal(18,2)");

                    b.Property<int>("MarcaId")
                        .HasColumnType("int");

                    b.Property<string>("Modelo")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("NumChasis")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Tipo")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Placa");

                    b.HasIndex("MarcaId");

                    b.ToTable("Vehiculo");
                });

            modelBuilder.Entity("creditoautomotriz.Entity.Models.Cliente", b =>
                {
                    b.HasOne("creditoautomotriz.Entity.Models.EstadoCivil", "EstadoCivil")
                        .WithMany()
                        .HasForeignKey("EstadoCivilId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("EstadoCivil");
                });

            modelBuilder.Entity("creditoautomotriz.Entity.Models.Credito", b =>
                {
                    b.HasOne("creditoautomotriz.Entity.Models.Cliente", "Cliente")
                        .WithMany()
                        .HasForeignKey("ClienteId");

                    b.HasOne("creditoautomotriz.Entity.Models.Ejecutivo", "Ejecutivo")
                        .WithMany()
                        .HasForeignKey("EjecutivoId");

                    b.HasOne("creditoautomotriz.Entity.Models.EstadoCredito", "EstadoCredito")
                        .WithMany()
                        .HasForeignKey("EstadoCreditoId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("creditoautomotriz.Entity.Models.Vehiculo", "Vehiculo")
                        .WithMany()
                        .HasForeignKey("Placa");

                    b.HasOne("creditoautomotriz.Entity.Models.Patio", "Patio")
                        .WithMany()
                        .HasForeignKey("PuntoVenta")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Cliente");

                    b.Navigation("Ejecutivo");

                    b.Navigation("EstadoCredito");

                    b.Navigation("Patio");

                    b.Navigation("Vehiculo");
                });

            modelBuilder.Entity("creditoautomotriz.Entity.Models.Ejecutivo", b =>
                {
                    b.HasOne("creditoautomotriz.Entity.Models.Patio", "Patio")
                        .WithMany()
                        .HasForeignKey("PatioId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Patio");
                });

            modelBuilder.Entity("creditoautomotriz.Entity.Models.Vehiculo", b =>
                {
                    b.HasOne("creditoautomotriz.Entity.Models.Marca", "Marca")
                        .WithMany()
                        .HasForeignKey("MarcaId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Marca");
                });
#pragma warning restore 612, 618
        }
    }
}
